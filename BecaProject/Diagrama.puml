@startuml
package Proxy {
    abstract class Subject {
        +verificarBeca(Estudiante estudiante)
    }

    class Proxy {
        -ConcreteSubject concreteSubject
        +Proxy()
        +verificarBeca(Estudiante estudiante)
    }

    class ConcreteSubject {
        +verificarBeca(Estudiante estudiante)
    }

    Subject <|-- Proxy
    Subject <|-- ConcreteSubject
}

package Estudiantes {
    abstract class Estudiante {
        -String nombre
        -String contrasena
        -double[] notas
        +Estudiante(String nombre, String contrasena, double[] notas)
        +String getNombre()
        +String getContrasena()
        +double[] getNotas()
        {abstract} +calcularPromedio(): double
    }

    class EstudianteBase {
        +EstudianteBase(String nombre, String contrasena, double[] notas)
        +calcularPromedio(): double
    }

    class EstudianteConBono {
        +EstudianteConBono(String nombre, String contrasena, double[] notas)
        +calcularPromedio(): double
        +obtenerBono(): double
    }

    class RegistroEstudiantes {
        -List<Estudiante> estudiantes
        +RegistroEstudiantes()
        -agregarEstudiantesDeEjemplo()
        +boolean existeEstudiante(String nombre)
        +Estudiante getEstudiante(String nombre)
    }

    Estudiante <|-- EstudianteBase
    Estudiante <|-- EstudianteConBono
}

package Applications {
    class Main {
        +main(String[] args)
    }
}

Proxy.Proxy o-- Proxy.ConcreteSubject
Proxy.Proxy --> Estudiantes.Estudiante
Proxy.ConcreteSubject --> Estudiantes.Estudiante
Estudiantes.RegistroEstudiantes --> Estudiantes.Estudiante
Applications.Main --> Estudiantes.RegistroEstudiantes
Applications.Main --> Proxy.Proxy
@enduml